#include <iostream>
using namespace std;
int t[9][9];

int un_kp(int p[], int l[],int Max_len, int n){
	if (n == 0 || Max_len == 0){
		return 0;
	}
	if (l[n - 1] <= Max_len){
		t[n][Max_len]= max(p[n - 1]+ un_kp(p, l,Max_len - l[n - 1], n),
		un_kp(p,l, Max_len, n - 1));
	}

	else{
		t[n][Max_len]= un_kp(p,l,Max_len, n - 1);
	}
	return t[n][Max_len];
}
int main(){
	int p[] = {1, 5, 8, 9, 10, 17, 17, 20};
	int n = 4;
	int l[n];
	for (int i = 0; i < n; i++) {
		l[i] = i + 1;
	}
	int Max_len = n;

	cout<< un_kp(p, l, n, Max_len) << endl;
}
